<?php
// üìÅ app/Http/Traits/ChecksUserStatus.php

namespace App\Http\Traits;

use Illuminate\Support\Facades\Auth;

trait ChecksUserStatus
{
    /**
     * V√©rifier que l'utilisateur est connect√© et actif
     * D√©connecte automatiquement si inactif
     */
    protected function checkActiveUser()
    {
        $user = Auth::user();
        
        if (!$user) {
            return redirect()->route('login');
        }

        if (!$user->estActif()) {
            Auth::logout();
            return redirect()->route('login')->withErrors(['nom' => 'Votre compte a √©t√© d√©sactiv√©']);
        }

        return null; // Pas de probl√®me
    }

    /**
     * V√©rifier le r√¥le et rediriger si n√©cessaire
     */
    protected function checkUserRole($requiredRole)
    {
        $user = Auth::user();
        
        // V√©rifier d'abord le statut
        $statusCheck = $this->checkActiveUser();
        if ($statusCheck) {
            return $statusCheck;
        }

        // V√©rifier le r√¥le
        if ($user->role !== $requiredRole) {
            // Rediriger vers le bon dashboard selon le r√¥le actuel
            if ($user->estAdmin()) {
                return redirect()->route('dashboard.admin');
            } elseif ($user->estOperateur()) {
                return redirect()->route('dashboard.operateur');
            }
            
            // Si aucun r√¥le reconnu
            abort(403, "Acc√®s non autoris√© - R√¥le {$requiredRole} requis");
        }

        return null; // Pas de probl√®me
    }
}